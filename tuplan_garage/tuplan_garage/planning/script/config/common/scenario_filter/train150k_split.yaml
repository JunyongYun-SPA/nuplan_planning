_target_: nuplan.planning.scenario_builder.scenario_filter.ScenarioFilter
_convert_: 'all'

scenario_types: null                # List of scenario types to include
scenario_tokens: null               # List of scenario tokens to include

log_names: null
  # - 2021.05.12.19.36.12_veh-35_01179_01278
  # - 2021.05.12.19.36.12_veh-35_01654_01733
  # - 2021.05.12.19.36.12_veh-35_01744_01934
  # - 2021.05.12.19.36.12_veh-35_02079_02176
  # - 2021.10.21.19.07.24_veh-28_00571_01295
  # - 2021.10.19.19.24.01_veh-28_01109_01342
  # - 2021.10.14.19.26.26_veh-28_00621_00693 # Filter scenarios by log names
  # - 2021.06.08.13.14.49_veh-47_04202_04373
  # - 2021.09.23.02.37.41_veh-51_00039_00529
  # - 2021.08.31.12.54.56_veh-40_00725_00909

map_names: null                     # Filter scenarios by map names

num_scenarios_per_type: 800        # Number of scenarios per type
limit_total_scenarios: null         # Limit total scenarios (float = fraction, int = num) - this filter can be applied on top of num_scenarios_per_type
timestamp_threshold_s: null         # Filter scenarios to ensure scenarios have more than `timestamp_threshold_s` seconds between their initial lidar timestamps
ego_displacement_minimum_m: null    # Whether to remove scenarios where the ego moves less than a certain amount
ego_start_speed_threshold: null     # Limit to scenarios where the ego reaches a certain speed from below
ego_stop_speed_threshold: null      # Limit to scenarios where the ego reaches a certain speed from above
speed_noise_tolerance: null         # Value at or below which a speed change between two timepoints should be ignored as noise.

expand_scenarios: true              # Whether to expand multi-sample scenarios to multiple single-sample scenarios
remove_invalid_goals: true          # Whether to remove scenarios where the mission goal is invalid
shuffle: true
